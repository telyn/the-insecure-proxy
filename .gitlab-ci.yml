variables:
  APP_NAME: the-insecure-proxy

stages:
  - build
  - build-image
  - deploy

build:
  stage: build
  image: rust:1.70
  script:
    - cargo fetch
    - cargo test --all-targets
    - cargo build --release
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  artifacts:
    paths:
      - target/release/the-insecure-proxy
  cache:
    paths:
      - target
      - .cargo

build-image:
  stage: build-image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - if [ "${CI_COMMIT_BRANCH}" = "main" ]; then DESTINATION_LATEST=' --destination '"${CI_REGISTRY_IMAGE}:latest" ; fi
    - echo /kaniko/executor --use-new-run -v debug --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"${DESTINATION_LATEST}
    - /kaniko/executor --use-new-run -v debug --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"${DESTINATION_LATEST}

# todo: replace with argocd
deploy:
  stage: deploy
  image: alpine/helm:3.7.2
  script:
    - >-
      helm upgrade "${APP_NAME}" ./chart --install --atomic \
           --values=./chart/values.yaml \
           --namespace "${KUBE_NAMESPACE}" \
           --set "applicationName=${APP_NAME}" \
           --set "image=${CI_REGISTRY_IMAGE}:latest" \
           --set "imagePullSecret=image-pull-secret-${APP_NAME}" \
           --set "priorityClassName=fun-stuff"
  needs:
    - build-image
  environment:
    name: production
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
      when: always
